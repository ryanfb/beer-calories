// Generated by CoffeeScript 1.6.3
(function() {
  var build_untappd_calories, calculate_calories, filter_url_params, parse_query_string, set_access_token, untappd_api_url, untappd_auth_url, untappd_config, update_calories;

  untappd_config = {
    client_id: '6CEC661CC1E87C1BE1B7D7FE30865F670AF6218B',
    redirect_url: 'https://ryanfb.github.io/beer-calories/',
    response_type: 'token'
  };

  untappd_api_url = 'https://api.untappd.com/v4';

  untappd_auth_url = function() {
    return "https://untappd.com/oauth/authenticate/?" + ($.param(untappd_config));
  };

  set_access_token = function(params, callback) {
    if (params['state'] != null) {
      console.log("Replacing hash with state: " + params['state']);
      history.replaceState(null, '', window.location.href.replace("" + location.hash, "#" + params['state']));
    }
    if (params['access_token'] != null) {
      console.log("Got access token: " + params['access_token']);
      localStorage['access_token'] = params['access_token'];
      if (callback != null) {
        return callback(params);
      }
    } else {
      if (callback != null) {
        return callback(params);
      }
    }
  };

  parse_query_string = function(query_string) {
    var m, params, regex;
    if (query_string == null) {
      query_string = location.hash.substring(1);
    }
    params = {};
    if (query_string.length > 0) {
      regex = /([^&=]+)=([^&]*)/g;
      while (m = regex.exec(query_string)) {
        params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
      }
    }
    return params;
  };

  filter_url_params = function(params, filtered_params) {
    var hash_string, key, rewritten_params, value;
    rewritten_params = [];
    if (filtered_params == null) {
      filtered_params = ['access_token', 'expires_in', 'token_type'];
    }
    for (key in params) {
      value = params[key];
      if (!_.include(filtered_params, key)) {
        rewritten_params.push("" + key + "=" + value);
      }
    }
    if (rewritten_params.length > 0) {
      hash_string = "#" + (rewritten_params.join('&'));
    } else {
      hash_string = '';
    }
    history.replaceState(null, '', window.location.href.replace("" + location.hash, hash_string));
    return params;
  };

  calculate_calories = function(abv, floz) {
    if (floz == null) {
      floz = 12;
    }
    return Math.round(floz * abv / 60 * 150);
  };

  update_calories = function(serving_size) {
    return $('#calories').text(calculate_calories($('#abv').val(), serving_size));
  };

  build_untappd_calories = function(params) {
    $('#abv_form').submit(function(event) {
      return event.preventDefault();
    });
    $('#serving_size').find('a').on('tap', function(event) {
      return update_calories($(event.target).data('serving-size'));
    });
    $('#abv').on("change keyup", function() {
      return update_calories($('#serving_size .ui-btn-active').first().data('serving-size'));
    });
    if (localStorage['access_token']) {
      $('#untappd_button').append('<a id="fill_abv" href="#">Fill ABV from last Untappd checkin</a>');
      $('#fill_abv').click(function() {
        $('#abv').val($('#last_abv').text());
        return $('#abv').change();
      });
      return $.ajax("" + untappd_api_url + "/user/checkins/?access_token=" + localStorage['access_token'] + "&limit=1", {
        type: 'GET',
        dataType: 'json',
        crossDomain: true,
        success: function(data) {
          var beer;
          console.log(data);
          beer = data['response']['checkins']['items'][0]['beer'];
          $('#content').append('<div id="last_checkin" align="center" id="ui-body-untappd" class="ui-body ui-body-a ui-corner-all">');
          return $('#last_checkin').append("<p>Last Untappd checkin: " + beer['beer_name'] + " (<span id=\"last_abv\">" + beer['beer_abv'] + "</span>% ABV)</p>");
        }
      });
    } else {
      return $('#untappd_button').append("<a href=\"" + (untappd_auth_url()) + "\">Log in to Untappd</a>");
    }
  };

  $(document).ready(function() {
    return set_access_token(filter_url_params(parse_query_string()), build_untappd_calories);
  });

}).call(this);
